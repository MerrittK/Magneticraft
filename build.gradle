buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

apply plugin: 'forge'

version = "0.4.0_test"
group= "com.cout970.magneticraft" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "magneticraft"

minecraft {
    version = "1.7.10-10.13.4.1448-1.7.10"
    runDir = "eclipse"

    //make version only have to be changed by one place, and that is here
    replace "@VERSION@", project.version
    replaceIn "Magneticraft.java"
}

repositories {
    maven { // The repo from which to get waila
        name "Mobius Repo"
        url "http://mobiusstrip.eu/maven"
    }
    maven { // the repo from which to get NEI and stuff
        name 'CB Repo'
        url "http://chickenbones.net/maven/"
    }
}

dependencies {
    compile files("./lib/NotEnoughItems-1.7.10-1.0.5.111-dev.jar")
    compile files("./lib/ForgeMultipart-1.7.10-1.1.2.331-dev.jar")
    compile files("./lib/CodeChickenLib-1.7.10-1.1.3.140-dev.jar")
    compile files("./lib/CodeChickenCore-1.7.10-1.0.7.47-dev.jar")
    compile files("./lib/MineTweaker3-Dev-1.7.10-3.0.9C.jar")
	compile "mcp.mobius.waila:Waila:1.5.10_1.7.10"
}

processResources
        {
            // this will ensure that this task is redone when the versions change.
            inputs.property "version", project.version
            inputs.property "mcversion", project.minecraft.version

            // replace stuff in mcmod.info, nothing else
            from(sourceSets.main.resources.srcDirs) {
                include 'mcmod.info'

                // replace version and mcversion
                expand 'version':project.version, 'mcversion':project.minecraft.version
            }

            // copy everything else, thats not the mcmod.info
            from(sourceSets.main.resources.srcDirs) {
                exclude 'mcmod.info'
            }
        }
task devJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'dev'
}

artifacts {
    archives devJar
}
apply plugin: 'idea'
idea.module.inheritOutputDirs = true
