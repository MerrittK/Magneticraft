// Date: 25/07/2015 16:24:54
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX


package com.cout970.magneticraft.client.model;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;

public class ModelBrassPipe extends ModelBase {
    //fields
    ModelRenderer base;
    ModelRenderer down;
    ModelRenderer up;
    ModelRenderer front;
    ModelRenderer back;
    ModelRenderer left;
    ModelRenderer right;
    ModelRenderer dadd;
    ModelRenderer uadd;
    ModelRenderer fadd;
    ModelRenderer badd;
    ModelRenderer ladd;
    ModelRenderer radd;
    ModelRenderer upCon;
    ModelRenderer downCon;
    ModelRenderer leftCon;
    ModelRenderer rightCon;
    ModelRenderer backCon;
    ModelRenderer frontCon;
    ModelRenderer upExt;
    ModelRenderer downExt;
    ModelRenderer frontExt;
    ModelRenderer backExt;
    ModelRenderer rightExt;
    ModelRenderer leftExt;

    public ModelBrassPipe() {
        textureWidth = 98;
        textureHeight = 32;

        base = new ModelRenderer(this, 0, 24);
        base.addBox(-2F, -2F, -2F, 4, 4, 4);
        base.setRotationPoint(0F, 16F, 0F);
        base.setTextureSize(98, 32);
        base.mirror = true;
        setRotation(base, 0F, 0F, 0F);
        down = new ModelRenderer(this, 16, 22);
        down.addBox(-2F, 2F, -2F, 4, 6, 4);
        down.setRotationPoint(0F, 16F, 0F);
        down.setTextureSize(98, 32);
        down.mirror = true;
        setRotation(down, 0F, 0F, 0F);
        up = new ModelRenderer(this, 16, 22);
        up.addBox(-2F, -8F, -2F, 4, 6, 4);
        up.setRotationPoint(0F, 16F, 0F);
        up.setTextureSize(98, 32);
        up.mirror = true;
        setRotation(up, 0F, 0F, 0F);
        front = new ModelRenderer(this, 0, 10);
        front.addBox(-2F, -2F, -8F, 4, 4, 6);
        front.setRotationPoint(0F, 16F, 0F);
        front.setTextureSize(98, 32);
        front.mirror = true;
        setRotation(front, 0F, 0F, 0F);
        back = new ModelRenderer(this, 0, 10);
        back.addBox(-2F, -2F, 2F, 4, 4, 6);
        back.setRotationPoint(0F, 16F, 0F);
        back.setTextureSize(98, 32);
        back.mirror = true;
        setRotation(back, 0F, 0F, 0F);
        left = new ModelRenderer(this, 44, 0);
        left.addBox(2F, -2F, -2F, 6, 4, 4);
        left.setRotationPoint(0F, 16F, 0F);
        left.setTextureSize(98, 32);
        left.mirror = true;
        setRotation(left, 0F, 0F, 0F);
        right = new ModelRenderer(this, 44, 0);
        right.addBox(-8F, -2F, -2F, 6, 4, 4);
        right.setRotationPoint(0F, 16F, 0F);
        right.setTextureSize(98, 32);
        right.mirror = true;
        setRotation(right, 0F, 0F, 0F);
        dadd = new ModelRenderer(this, 44, 16);
        dadd.addBox(-2.5F, 3.5F, -2.5F, 5, 1, 5);
        dadd.setRotationPoint(0F, 16F, 0F);
        dadd.setTextureSize(98, 32);
        dadd.mirror = true;
        setRotation(dadd, 0F, 0F, 0F);
        uadd = new ModelRenderer(this, 44, 16);
        uadd.addBox(-2.5F, -4.5F, -2.5F, 5, 1, 5);
        uadd.setRotationPoint(0F, 16F, 0F);
        uadd.setTextureSize(98, 32);
        uadd.mirror = true;
        setRotation(uadd, 0F, 0F, 0F);
        fadd = new ModelRenderer(this, 48, 22);
        fadd.addBox(-2.5F, -2.5F, -4.5F, 5, 5, 1);
        fadd.setRotationPoint(0F, 16F, 0F);
        fadd.setTextureSize(98, 32);
        fadd.mirror = true;
        setRotation(fadd, 0F, 0F, 0F);
        badd = new ModelRenderer(this, 48, 22);
        badd.addBox(-2.5F, -2.5F, 3.5F, 5, 5, 1);
        badd.setRotationPoint(0F, 16F, 0F);
        badd.setTextureSize(98, 32);
        badd.mirror = true;
        setRotation(badd, 0F, 0F, 0F);
        ladd = new ModelRenderer(this, 32, 0);
        ladd.addBox(3.5F, -2.5F, -2.5F, 1, 5, 5);
        ladd.setRotationPoint(0F, 16F, 0F);
        ladd.setTextureSize(98, 32);
        ladd.mirror = true;
        setRotation(ladd, 0F, 0F, 0F);
        radd = new ModelRenderer(this, 32, 0);
        radd.addBox(-4.5F, -2.5F, -2.5F, 1, 5, 5);
        radd.setRotationPoint(0F, 16F, 0F);
        radd.setTextureSize(98, 32);
        radd.mirror = true;
        setRotation(radd, 0F, 0F, 0F);
        upCon = new ModelRenderer(this, 20, 10);
        upCon.addBox(-3F, -8F, -3F, 6, 1, 6);
        upCon.setRotationPoint(0F, 16F, 0F);
        upCon.setTextureSize(98, 32);
        upCon.mirror = true;
        setRotation(upCon, 0F, 0F, 0F);
        downCon = new ModelRenderer(this, 20, 10);
        downCon.addBox(-3F, 7F, -3F, 6, 1, 6);
        downCon.setRotationPoint(0F, 16F, 0F);
        downCon.setTextureSize(98, 32);
        downCon.mirror = true;
        setRotation(downCon, 0F, 0F, 0F);
        leftCon = new ModelRenderer(this, 84, 0);
        leftCon.addBox(7F, -3F, -3F, 1, 6, 6);
        leftCon.setRotationPoint(0F, 16F, 0F);
        leftCon.setTextureSize(98, 32);
        leftCon.mirror = true;
        setRotation(leftCon, 0F, 0F, 0F);
        rightCon = new ModelRenderer(this, 84, 0);
        rightCon.addBox(-8F, -3F, -3F, 1, 6, 6);
        rightCon.setRotationPoint(0F, 16F, 0F);
        rightCon.setTextureSize(98, 32);
        rightCon.mirror = true;
        setRotation(rightCon, 0F, 0F, 0F);
        backCon = new ModelRenderer(this, 32, 25);
        backCon.addBox(-3F, -3F, 7F, 6, 6, 1);
        backCon.setRotationPoint(0F, 16F, 0F);
        backCon.setTextureSize(98, 32);
        backCon.mirror = true;
        setRotation(backCon, 0F, 0F, 0F);
        frontCon = new ModelRenderer(this, 32, 25);
        frontCon.addBox(-3F, -3F, -8F, 6, 6, 1);
        frontCon.setRotationPoint(0F, 16F, 0F);
        frontCon.setTextureSize(98, 32);
        frontCon.mirror = true;
        setRotation(frontCon, 0F, 0F, 0F);
        upExt = new ModelRenderer(this, 0, 0);
        upExt.addBox(-4F, -8F, -4F, 8, 2, 8);
        upExt.setRotationPoint(0F, 16F, 0F);
        upExt.setTextureSize(98, 32);
        upExt.mirror = true;
        setRotation(upExt, 0F, 0F, 0F);
        downExt = new ModelRenderer(this, 0, 0);
        downExt.addBox(-4F, 6F, -4F, 8, 2, 8);
        downExt.setRotationPoint(0F, 16F, 0F);
        downExt.setTextureSize(98, 32);
        downExt.mirror = true;
        setRotation(downExt, 0F, 0F, 0F);
        frontExt = new ModelRenderer(this, 64, 16);
        frontExt.addBox(-4F, -4F, -8F, 8, 8, 2);
        frontExt.setRotationPoint(0F, 16F, 0F);
        frontExt.setTextureSize(98, 32);
        frontExt.mirror = true;
        setRotation(frontExt, 0F, 0F, 0F);
        backExt = new ModelRenderer(this, 64, 16);
        backExt.addBox(-4F, -4F, 6F, 8, 8, 2);
        backExt.setRotationPoint(0F, 16F, 0F);
        backExt.setTextureSize(98, 32);
        backExt.mirror = true;
        setRotation(backExt, 0F, 0F, 0F);
        rightExt = new ModelRenderer(this, 64, 0);
        rightExt.addBox(-8F, -4F, -4F, 2, 8, 8);
        rightExt.setRotationPoint(0F, 16F, 0F);
        rightExt.setTextureSize(98, 32);
        rightExt.mirror = true;
        setRotation(rightExt, 0F, 0F, 0F);
        leftExt = new ModelRenderer(this, 64, 0);
        leftExt.addBox(6F, -4F, -4F, 2, 8, 8);
        leftExt.setRotationPoint(0F, 16F, 0F);
        leftExt.setTextureSize(98, 32);
        leftExt.mirror = true;
        setRotation(leftExt, 0F, 0F, 0F);
    }

    public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5) {
        super.render(entity, f, f1, f2, f3, f4, f5);
        base.render(f5);
        down.render(f5);
        up.render(f5);
        front.render(f5);
        back.render(f5);
        left.render(f5);
        right.render(f5);
        dadd.render(f5);
        uadd.render(f5);
        fadd.render(f5);
        badd.render(f5);
        ladd.render(f5);
        radd.render(f5);
        upCon.render(f5);
        downCon.render(f5);
        leftCon.render(f5);
        rightCon.render(f5);
        backCon.render(f5);
        frontCon.render(f5);
        upExt.render(f5);
        downExt.render(f5);
        frontExt.render(f5);
        backExt.render(f5);
        rightExt.render(f5);
        leftExt.render(f5);
    }

    public void renderStatic(float f5) {
        base.render(f5);
    }

    public void renderDynamic(float f5, int con, int con2) {
        if ((con & 1) > 0) {
            down.render(f5);
            dadd.render(f5);
        }
        if ((con & 2) > 0) {
            up.render(f5);
            uadd.render(f5);
        }
        if ((con & 4) > 0) {
            front.render(f5);
            fadd.render(f5);
        }
        if ((con & 8) > 0) {
            back.render(f5);
            badd.render(f5);
        }
        if ((con & 16) > 0) {
            right.render(f5);
            radd.render(f5);
        }
        if ((con & 32) > 0) {
            left.render(f5);
            ladd.render(f5);
        }

//	  upCon.render(f5);
//	  downCon.render(f5);
//	  leftCon.render(f5);
//	  rightCon.render(f5);
//	  backCon.render(f5);
//	  frontCon.render(f5);

//	  upExt.render(f5);
//	  downExt.render(f5);
//	  frontExt.render(f5);
//	  backExt.render(f5);
//	  rightExt.render(f5);
//	  leftExt.render(f5);
    }

    private void setRotation(ModelRenderer model, float x, float y, float z) {
        model.rotateAngleX = x;
        model.rotateAngleY = y;
        model.rotateAngleZ = z;
    }
}
