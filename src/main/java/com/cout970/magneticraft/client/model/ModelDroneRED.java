// Date: 23/05/2015 23:26:26
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX


package com.cout970.magneticraft.client.model;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;

public class ModelDroneRED extends ModelBase {
    //fields
    ModelRenderer Shape1;
    ModelRenderer Shape2;
    ModelRenderer Shape3;
    ModelRenderer prop1;
    ModelRenderer prop2;
    ModelRenderer back;
    ModelRenderer drill1;
    ModelRenderer drill2;
    ModelRenderer drill3;
    ModelRenderer drill4;
    ModelRenderer drill5;

    public ModelDroneRED() {
        textureWidth = 64;
        textureHeight = 64;

        Shape1 = new ModelRenderer(this, 0, 0);
        Shape1.addBox(-4F, -4F, -2F, 8, 8, 8);
        Shape1.setRotationPoint(0F, 16F, 0F);
        Shape1.setTextureSize(64, 64);
        Shape1.mirror = true;
        setRotation(Shape1, 0F, 0F, 0F);
        Shape2 = new ModelRenderer(this, 1, 3);
        Shape2.addBox(-5F, -1F, -1F, 1, 2, 2);
        Shape2.setRotationPoint(0F, 16F, 0F);
        Shape2.setTextureSize(64, 64);
        Shape2.mirror = true;
        setRotation(Shape2, 0F, 0F, 0F);
        Shape3 = new ModelRenderer(this, 1, 3);
        Shape3.addBox(4F, -1F, -1F, 1, 2, 2);
        Shape3.setRotationPoint(0F, 16F, 0F);
        Shape3.setTextureSize(64, 64);
        Shape3.mirror = true;
        setRotation(Shape3, 0F, 0F, 0F);
        prop1 = new ModelRenderer(this, 20, 17);
        prop1.addBox(5F, -2F, -1.5F, 3, 9, 3);
        prop1.setRotationPoint(0F, 16F, 0F);
        prop1.setTextureSize(64, 64);
        prop1.mirror = true;
        setRotation(prop1, 0F, 0F, 0F);
        prop2 = new ModelRenderer(this, 20, 17);
        prop2.addBox(-8F, -2F, -1.5F, 3, 9, 3);
        prop2.setRotationPoint(0F, 16F, 0F);
        prop2.setTextureSize(64, 64);
        prop2.mirror = true;
        setRotation(prop2, 0F, 0F, 0F);
        back = new ModelRenderer(this, 0, 16);
        back.addBox(-3F, -3F, 6F, 6, 6, 2);
        back.setRotationPoint(0F, 16F, 0F);
        back.setTextureSize(64, 64);
        back.mirror = true;
        setRotation(back, 0F, 0F, 0F);
        drill1 = new ModelRenderer(this, 32, 0);
        drill1.addBox(-3F, -3F, -4F, 6, 6, 2);
        drill1.setRotationPoint(0F, 16F, 0F);
        drill1.setTextureSize(64, 64);
        drill1.mirror = true;
        setRotation(drill1, 0F, 0F, 0F);
        drill2 = new ModelRenderer(this, 32, 9);
        drill2.addBox(-2.5F, -2.5F, -5F, 5, 5, 1);
        drill2.setRotationPoint(0F, 16F, 0F);
        drill2.setTextureSize(64, 64);
        drill2.mirror = true;
        setRotation(drill2, 0F, 0F, 0F);
        drill3 = new ModelRenderer(this, 32, 16);
        drill3.addBox(-2F, -2F, -6F, 4, 4, 1);
        drill3.setRotationPoint(0F, 16F, 0F);
        drill3.setTextureSize(64, 64);
        drill3.mirror = true;
        setRotation(drill3, 0F, 0F, 0F);
        drill4 = new ModelRenderer(this, 49, 0);
        drill4.addBox(-1.5F, -1.5F, -7F, 3, 3, 1);
        drill4.setRotationPoint(0F, 16F, 0F);
        drill4.setTextureSize(64, 64);
        drill4.mirror = true;
        setRotation(drill4, 0F, 0F, 0F);
        drill5 = new ModelRenderer(this, 49, 5);
        drill5.addBox(-1F, -1F, -8F, 2, 2, 1);
        drill5.setRotationPoint(0F, 16F, 0F);
        drill5.setTextureSize(64, 64);
        drill5.mirror = true;
        setRotation(drill5, 0F, 0F, 0F);
    }

    public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5) {
        super.render(entity, f, f1, f2, f3, f4, f5);
        Shape1.render(f5);
        Shape2.render(f5);
        Shape3.render(f5);
        prop1.render(f5);
        prop2.render(f5);
        back.render(f5);
        drill1.render(f5);
        drill2.render(f5);
        drill3.render(f5);
        drill4.render(f5);
        drill5.render(f5);
    }

    private void setRotation(ModelRenderer model, float x, float y, float z) {
        model.rotateAngleX = x;
        model.rotateAngleY = y;
        model.rotateAngleZ = z;
    }

    public void renderStatic(float f5) {

        Shape2.render(f5);
        Shape3.render(f5);
        prop1.render(f5);
        prop2.render(f5);
    }

    public void renderDynamic(float f5, float i, float j) {
        drill1.rotateAngleZ = i;
        drill2.rotateAngleZ = i;
        drill3.rotateAngleZ = i;
        drill4.rotateAngleZ = i;
        drill5.rotateAngleZ = i;

//	  Shape1.rotateAngleX = j;
//	  back.rotateAngleX = j;
//	  drill1.rotateAngleX = j;
//	  drill2.rotateAngleX = j;
//	  drill3.rotateAngleX = j;
//	  drill4.rotateAngleX = j;
//	  drill5.rotateAngleX = j;

        Shape1.render(f5);
        back.render(f5);

        drill1.render(f5);
        drill2.render(f5);
        drill3.render(f5);
        drill4.render(f5);
        drill5.render(f5);
    }
}
