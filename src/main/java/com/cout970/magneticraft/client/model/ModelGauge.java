// Date: 22/07/2015 18:08:39
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX


package com.cout970.magneticraft.client.model;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;

public class ModelGauge extends ModelBase {
    //fields
    ModelRenderer base;
    ModelRenderer mark;
    ModelRenderer border1;
    ModelRenderer border2;
    ModelRenderer border3;
    ModelRenderer border4;
    ModelRenderer coil;

    public ModelGauge() {
        textureWidth = 64;
        textureHeight = 32;

        base = new ModelRenderer(this, 0, 0);
        base.addBox(-8F, 7F, -7F, 16, 1, 14);
        base.setRotationPoint(0F, 16F, 0F);
        base.setTextureSize(64, 32);
        base.mirror = true;
        setRotation(base, 0F, 0F, 0F);
        mark = new ModelRenderer(this, 0, 15);
        mark.addBox(-0.5F, 6F, -1.5F, 1, 1, 11);
        mark.setRotationPoint(0F, 16F, -4F);
        mark.setTextureSize(64, 32);
        mark.mirror = true;
        setRotation(mark, 0F, 0.4089647F, 0F);
        border1 = new ModelRenderer(this, 0, 28);
        border1.addBox(-8F, 0F, 6F, 16, 1, 1);
        border1.setRotationPoint(0F, 22F, 0F);
        border1.setTextureSize(64, 32);
        border1.mirror = true;
        setRotation(border1, 0F, 0F, 0F);
        border2 = new ModelRenderer(this, 24, 15);
        border2.addBox(-8F, 0F, -6F, 1, 1, 12);
        border2.setRotationPoint(0F, 22F, 0F);
        border2.setTextureSize(64, 32);
        border2.mirror = true;
        setRotation(border2, 0F, 0F, 0F);
        border3 = new ModelRenderer(this, 0, 28);
        border3.addBox(0F, 0F, 0F, 16, 1, 1);
        border3.setRotationPoint(-8F, 22F, -7F);
        border3.setTextureSize(64, 32);
        border3.mirror = true;
        setRotation(border3, 0F, 0F, 0F);
        border4 = new ModelRenderer(this, 24, 15);
        border4.addBox(0F, 0F, 0F, 1, 1, 12);
        border4.setRotationPoint(7F, 22F, -6F);
        border4.setTextureSize(64, 32);
        border4.mirror = true;
        setRotation(border4, 0F, 0F, 0F);
        coil = new ModelRenderer(this, 50, 15);
        coil.addBox(-1F, 5.5F, -1F, 2, 2, 2);
        coil.setRotationPoint(0F, 16F, -4F);
        coil.setTextureSize(64, 32);
        coil.mirror = true;
        setRotation(coil, 0F, 0F, 0F);
    }

    public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5) {
        super.render(entity, f, f1, f2, f3, f4, f5);
        //    setRotationAngles(f, f1, f2, f3, f4, f5);
        base.render(f5);
        mark.render(f5);
        border1.render(f5);
        border2.render(f5);
        border3.render(f5);
        border4.render(f5);
        coil.render(f5);
    }

    public void renderStatic(float f5) {
        base.render(f5);
        border1.render(f5);
        border2.render(f5);
        border3.render(f5);
        border4.render(f5);
    }

    //rot from 0 to 100 only
    public void renderDynamic(float f5, float rot) {
        float r = (rot / 50f - 1) * 0.75f;
        mark.rotateAngleY = r;
        coil.rotateAngleY = r;
        mark.render(f5);
        coil.render(f5);
    }

    private void setRotation(ModelRenderer model, float x, float y, float z) {
        model.rotateAngleX = x;
        model.rotateAngleY = y;
        model.rotateAngleZ = z;
    }
}
