// Date: 22/07/2015 17:28:13
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX


package com.cout970.magneticraft.client.model;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;

public class ModelSwitch extends ModelBase {
    //fields
    ModelRenderer Base;
    ModelRenderer comp1;
    ModelRenderer comp2;
    ModelRenderer comp3;
    ModelRenderer comp4;
    ModelRenderer contact1;
    ModelRenderer contact2;
    ModelRenderer contact3;
    ModelRenderer contact4;

    public ModelSwitch() {
        textureWidth = 32;
        textureHeight = 32;

        Base = new ModelRenderer(this, 0, 0);
        Base.addBox(-3F, 0.5F, -5F, 6, 1, 10);
        Base.setRotationPoint(0F, 22.5F, 0F);
        Base.setTextureSize(32, 32);
        Base.mirror = true;
        setRotation(Base, 0F, 0F, 0F);
        comp1 = new ModelRenderer(this, 0, 11);
        comp1.addBox(1F, -0.5F, -0.5F, 1, 1, 5);
        comp1.setRotationPoint(0F, 22.5F, 0F);
        comp1.setTextureSize(32, 32);
        comp1.mirror = true;
        setRotation(comp1, 0F, 0F, 0F);
        comp2 = new ModelRenderer(this, 0, 17);
        comp2.addBox(-2F, -0.5F, -0.5F, 1, 1, 5);
        comp2.setRotationPoint(0F, 22.5F, 0F);
        comp2.setTextureSize(32, 32);
        comp2.mirror = true;
        setRotation(comp2, 0F, 0F, 0F);
        comp3 = new ModelRenderer(this, 12, 11);
        comp3.addBox(-1F, -0.5F, 3.5F, 2, 1, 1);
        comp3.setRotationPoint(0F, 22.5F, 0F);
        comp3.setTextureSize(32, 32);
        comp3.mirror = true;
        setRotation(comp3, 0F, 0F, 0F);
        comp4 = new ModelRenderer(this, 12, 13);
        comp4.addBox(-0.5F, -0.5F, 4.5F, 1, 1, 2);
        comp4.setRotationPoint(0F, 22.5F, 0F);
        comp4.setTextureSize(32, 32);
        comp4.mirror = true;
        setRotation(comp4, 0F, 0F, 0F);
        contact1 = new ModelRenderer(this, 12, 17);
        contact1.addBox(0.9F, -0.5F, -3F, 0, 1, 1);
        contact1.setRotationPoint(0F, 22.5F, 0F);
        contact1.setTextureSize(32, 32);
        contact1.mirror = true;
        setRotation(contact1, 0F, 0F, 0F);
        contact2 = new ModelRenderer(this, 14, 17);
        contact2.addBox(2.1F, -0.5F, -3F, 0, 1, 1);
        contact2.setRotationPoint(0F, 22.5F, 0F);
        contact2.setTextureSize(32, 32);
        contact2.mirror = true;
        setRotation(contact2, 0F, 0F, 0F);
        contact3 = new ModelRenderer(this, 16, 17);
        contact3.addBox(-0.9F, -0.5F, -3F, 0, 1, 1);
        contact3.setRotationPoint(0F, 22.5F, 0F);
        contact3.setTextureSize(32, 32);
        contact3.mirror = true;
        setRotation(contact3, 0F, 0F, 0F);
        contact4 = new ModelRenderer(this, 18, 17);
        contact4.addBox(-2.1F, -0.5F, -3F, 0, 1, 1);
        contact4.setRotationPoint(0F, 22.5F, 0F);
        contact4.setTextureSize(32, 32);
        contact4.mirror = true;
        setRotation(contact4, 0F, 0F, 0F);
    }

    public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5) {
        super.render(entity, f, f1, f2, f3, f4, f5);
//    setRotationAngles(f, f1, f2, f3, f4, f5);
        Base.render(f5);
        comp1.render(f5);
        comp2.render(f5);
        comp3.render(f5);
        comp4.render(f5);
        contact1.render(f5);
        contact2.render(f5);
        contact3.render(f5);
        contact4.render(f5);
    }

    public void renderStatic(float f5) {
        Base.render(f5);
        contact1.render(f5);
        contact2.render(f5);
        contact3.render(f5);
        contact4.render(f5);
    }

    public void renderDynamic(float f5, float anim) {
        comp1.rotateAngleX = anim;
        comp2.rotateAngleX = anim;
        comp3.rotateAngleX = anim;
        comp4.rotateAngleX = anim;

        comp1.render(f5);
        comp2.render(f5);
        comp3.render(f5);
        comp4.render(f5);
    }

    private void setRotation(ModelRenderer model, float x, float y, float z) {
        model.rotateAngleX = x;
        model.rotateAngleY = y;
        model.rotateAngleZ = z;
    }

}
